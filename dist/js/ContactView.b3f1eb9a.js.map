{"version":3,"file":"js/ContactView.b3f1eb9a.js","mappings":"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","sources":["webpack://web-project/./src/views/ContactView.vue","webpack://web-project/./node_modules/emailjs-com/es/store/store.js","webpack://web-project/./node_modules/emailjs-com/es/methods/init/init.js","webpack://web-project/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://web-project/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://web-project/./node_modules/emailjs-com/es/api/sendPost.js","webpack://web-project/./node_modules/emailjs-com/es/methods/send/send.js","webpack://web-project/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://web-project/./node_modules/emailjs-com/es/index.js","webpack://web-project/src/views/ContactView.vue","webpack://web-project/./src/views/ContactView.vue?26cd","webpack://web-project/./src/views/ContactView.vue?be32"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"py-5\"},[_c('h2',{staticClass:\"text-center\"},[_vm._v(\"Contact me\")]),_c('b-overlay',{attrs:{\"show\":_vm.isShowLoader,\"rounded\":\"sm\",\"spinner-variant\":\"primary\",\"spinner-type\":\"grow\",\"spinner-small\":\"\"}},[_c('div',{staticClass:\"mt-5\"},[_c('form',{staticClass:\"form-wrap mx-auto\",attrs:{\"action\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.sendEmail($event)}}},[_c('div',[_c('b-form-input',{staticClass:\"input-text\",attrs:{\"placeholder\":\"Your email here...\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1),_c('div',{staticClass:\"mt-4\"},[_c('b-form-input',{staticClass:\"input-text\",attrs:{\"placeholder\":\"Your phone number...\"},model:{value:(_vm.phone),callback:function ($$v) {_vm.phone=$$v},expression:\"phone\"}})],1),_c('div',{staticClass:\"mt-4\"},[_c('b-form-textarea',{staticClass:\"input-text\",attrs:{\"id\":\"textarea-rows\",\"placeholder\":\"Tall textarea\",\"rows\":\"8\"},model:{value:(_vm.message),callback:function ($$v) {_vm.message=$$v},expression:\"message\"}})],1),_c('div',{staticClass:\"d-grid\"},[_c('b-button',{staticClass:\"mt-4 btn-send\",attrs:{\"variant\":\"info\"}},[_vm._v(\"Send\")])],1)])])])],1),_c('b-modal',{ref:\"altMessage\",attrs:{\"id\":\"bv-modal-example\",\"hide-footer\":\"\"}},[_c('div',{staticClass:\"d-block text-center\"},[_c('h3',[_vm._v(_vm._s(_vm.altMessage))])]),_c('b-button',{staticClass:\"mt-3\",attrs:{\"block\":\"\"},on:{\"click\":function($event){return _vm.$bvModal.hide('bv-modal-example')}}},[_vm._v(\"Close Me\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","<template>\n  <div class=\"container\">\n    <div class=\"py-5\">\n      <h2 class=\"text-center\">Contact me</h2>\n      <b-overlay\n        :show=\"isShowLoader\"\n        rounded=\"sm\"\n        spinner-variant=\"primary\"\n        spinner-type=\"grow\"\n        spinner-small\n      >\n        <div class=\"mt-5\">\n          <form\n            action=\"\"\n            class=\"form-wrap mx-auto\"\n            @submit.prevent=\"sendEmail($event)\"\n          >\n            <div>\n              <b-form-input\n                v-model=\"email\"\n                placeholder=\"Your email here...\"\n                class=\"input-text\"\n              ></b-form-input>\n            </div>\n            <div class=\"mt-4\">\n              <b-form-input\n                v-model=\"phone\"\n                placeholder=\"Your phone number...\"\n                class=\"input-text\"\n              ></b-form-input>\n            </div>\n            <div class=\"mt-4\">\n              <b-form-textarea\n                v-model=\"message\"\n                id=\"textarea-rows\"\n                class=\"input-text\"\n                placeholder=\"Tall textarea\"\n                rows=\"8\"\n              ></b-form-textarea>\n            </div>\n            <div class=\"d-grid\">\n              <b-button style=\"\" variant=\"info\" class=\"mt-4 btn-send\"\n                >Send</b-button\n              >\n            </div>\n          </form>\n        </div>\n      </b-overlay>\n    </div>\n    <b-modal id=\"bv-modal-example\" ref=\"altMessage\" hide-footer>\n      <div class=\"d-block text-center\">\n        <h3>{{ altMessage }}</h3>\n      </div>\n      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-example')\"\n        >Close Me</b-button\n      >\n    </b-modal>\n  </div>\n</template>\n<script>\nimport emailjs from \"emailjs-com\";\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n      altMessage: \"\",\n      isShowLoader: false,\n    };\n  },\n\n  methods: {\n    async sendEmail() {\n      if (this.email && this.phone && this.message) {\n        this.isShowLoader = true;\n        console.log(this.isShowLoader);\n        const templateParams = {\n          from_email: this.email,\n          message: this.message,\n          phone: this.phone,\n        };\n\n        await emailjs\n          .send(\n            \"service_7qgu4cl\",\n            \"template_g3nsk5u\",\n            templateParams,\n            \"GLlcRL5iBkcRjfi0W\"\n          )\n          .then(\n            (response) => {\n              console.log(\"SUCCESS!\", response.status, response.text);\n              this.altMessage = \"Email sent successfully!\";\n              this.$refs.altMessage.show();\n            },\n            (error) => {\n              console.log(\"FAILED...\", error);\n              this.altMessage = \"Failed to send email. Please try again later.\";\n              this.$refs.altMessage.show();\n            }\n          );\n        this.isShowLoader = false;\n        // Reset form field\n        this.phone = \"\";\n        this.email = \"\";\n        this.message = \"\";\n      }\n    },\n  },\n};\n</script>\n<style scoped>\nh2 {\n  color: #6b9cff;\n}\n.input-text {\n  border: 1px solid #6b9cff;\n}\n.btn-send {\n  color: #033333;\n  transition: 0.5s;\n  font-weight: 600;\n  background-color: #aee5ff;\n  border: none;\n}\n.btn-send:hover {\n  opacity: 0.9;\n}\n.form-wrap {\n  width: 70%;\n}\n@media screen and (max-width: 978px) {\n  .form-wrap {\n    width: 100%;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ContactView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ContactView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContactView.vue?vue&type=template&id=b1119158&scoped=true&\"\nimport script from \"./ContactView.vue?vue&type=script&lang=js&\"\nexport * from \"./ContactView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ContactView.vue?vue&type=style&index=0&id=b1119158&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b1119158\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","isShowLoader","on","$event","preventDefault","sendEmail","model","value","email","callback","$$v","expression","phone","message","ref","_s","altMessage","$bvModal","hide","staticRenderFns","store","_origin","init","userID","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","methods","console","from_email","templateParams","then","response","error","component"],"sourceRoot":""}